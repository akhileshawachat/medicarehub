@using Microsoft.AspNetCore.Identity


@inject UserManager<IdentityUser> UserManager
@model WebAppDemoStudent.Models.Booking

@{
    ViewData["Title"] = "Edit";
}

<body class="Editbg">
<h2>Update Appointment</h2>

@* <h4>Booking</h4> *@
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" readonly class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Weight" class="control-label"></label>
                @if (User.IsInRole("patient") || (User.IsInRole("admin")))
                {
                <input asp-for="Weight" class="form-control" /> 
                }
               
                @if(User.IsInRole("doctor")){
                    <input readonly asp-for="Weight" class="form-control" />
                 }
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Height" class="control-label"></label>
                @if (User.IsInRole("patient") || (User.IsInRole("admin")))
                {
                <input asp-for="Height" class="form-control" />
                 }
                 @if(User.IsInRole("doctor")){
                    <input readonly asp-for="Height" class="form-control" />
                 }
                <span asp-validation-for="Height" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Symptoms" class="control-label"></label>
                @if (User.IsInRole("patient") || (User.IsInRole("admin")))
                {
                <input asp-for="Symptoms" class="form-control" />
                 }
                 @if(User.IsInRole("doctor")){
                    <input readonly asp-for="Symptoms" class="form-control" />
                 }
                <span asp-validation-for="Symptoms" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Doctor" class="control-label"></label>
                <input readonly asp-for="Doctor" class="form-control" />
                <span asp-validation-for="Doctor" class="text-danger"></span>
            </div>
            <br />
            
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-success"/>
            </div>
        </form>
    </div>
</div>
<br />
<div>
    @if (User.IsInRole("patient"))
    {
        <a class="btn btn-primary" asp-action="GetUserByEmail" asp-route-email="@UserManager.GetUserName(User)">Back to List</a>
    }
    @if (User.IsInRole("doctor"))
    {
            <a class="btn btn-primary" asp-action="GetAppointmentsByDoctor" asp-route-doctorName=@UserManager.GetUserName(User)>Back to List</a>
    }
    @if (User.IsInRole("admin"))
    {
        <a class="btn btn-primary" asp-action="Index">Back to List</a>
    }

</div>
</body>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


